{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/ToDolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToDolist = props => {\n  _s();\n  const MappedTasks = () => {\n    {\n      props.task.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [el.title, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: el.isDone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                props.DeleteTask(el.id);\n              },\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this)]\n          }, el.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this);\n      });\n    }\n  };\n  let [inputValue, setInput] = useState('');\n  const onClickHandlerInput = event => {\n    setInput(event.currentTarget.value);\n  };\n  const onClickHandlerButton = () => {\n    props.onClickButton(inputValue);\n    setInput('');\n  };\n  const onKeyHandlerDown = event => {\n    if (event.key === 'Enter') {\n      onClickHandlerButton();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputValue,\n      onChange: onClickHandlerInput,\n      onKeyDown: onKeyHandlerDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickHandlerButton,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: MappedTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.callBack('All'),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.callBack('Active'),\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.callBack('Completed'),\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(ToDolist, \"vSs2cScvGZu5iampSy+uupEghyk=\");\n_c = ToDolist;\nvar _c;\n$RefreshReg$(_c, \"ToDolist\");","map":{"version":3,"names":["React","useState","ToDolist","props","MappedTasks","task","map","el","title","isDone","DeleteTask","id","inputValue","setInput","onClickHandlerInput","event","currentTarget","value","onClickHandlerButton","onClickButton","onKeyHandlerDown","key","name","callBack"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/ToDolist.tsx"],"sourcesContent":["import React, {ChangeEvent,KeyboardEvent, useState} from 'react';\n\ntype TaskType = {\n    task:Array<ArrayTaskType>\n    name:string\n    DeleteTask:(number:number)=>void\n    callBack:(nameButton:string)=>void\n    onClickButton:(inputValue:string)=>void\n\n}\n\ntype ArrayTaskType = {\n    id:number;\n    title:string;\n    isDone:boolean\n}\n\n\nexport  const ToDolist = (props:TaskType) => {\n\n\n    const MappedTasks = ()=> {\n        {props.task.map((el)=>{\n            return(\n                <div>{ <li key={el.id}>\n                    {el.title}\n                    <input  type={\"checkbox\"} checked={el.isDone} />\n                    <button onClick={()=>{props.DeleteTask(el.id)}}>x</button>\n                </li>\n\n                }\n                </div>\n            )\n        })}\n    }\n    let [inputValue,setInput]=useState('')\n\nconst onClickHandlerInput = (event:ChangeEvent<HTMLInputElement>)=> {\n    setInput(event.currentTarget.value)\n}\n\nconst onClickHandlerButton = ()=> {\n        props.onClickButton(inputValue)\n    setInput('')\n}\n\nconst onKeyHandlerDown = (event:KeyboardEvent<HTMLInputElement>)=> {\n        if(event.key==='Enter'){onClickHandlerButton()}\n\n}\n\n    return (\n\n        <div>\n\n            <h3>{props.name}</h3>\n            <input  value={inputValue} onChange={onClickHandlerInput} onKeyDown={onKeyHandlerDown}/>\n            <button onClick={onClickHandlerButton}>+</button>\n<div>{MappedTasks}</div>\n\n\n            <button onClick={()=>props.callBack('All')}>All</button>\n            <button onClick={()=>props.callBack('Active')}>Active</button>\n            <button onClick={()=>props.callBack('Completed')}>Completed</button>\n        </div>\n    );\n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA8BC,QAAQ,QAAO,OAAO;AAAC;AAkBjE,OAAQ,MAAMC,QAAQ,GAAIC,KAAc,IAAK;EAAA;EAGzC,MAAMC,WAAW,GAAG,MAAK;IACrB;MAACD,KAAK,CAACE,IAAI,CAACC,GAAG,CAAEC,EAAE,IAAG;QAClB,oBACI;UAAA,uBAAO;YAAA,WACFA,EAAE,CAACC,KAAK,eACT;cAAQ,IAAI,EAAE,UAAW;cAAC,OAAO,EAAED,EAAE,CAACE;YAAO;cAAA;cAAA;cAAA;YAAA,QAAG,eAChD;cAAQ,OAAO,EAAE,MAAI;gBAACN,KAAK,CAACO,UAAU,CAACH,EAAE,CAACI,EAAE,CAAC;cAAA,CAAE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAW;UAAA,GAH9CJ,EAAE,CAACI,EAAE;YAAA;YAAA;YAAA;UAAA;QAIhB;UAAA;UAAA;UAAA;QAAA,QAGC;MAEd,CAAC,CAAC;IAAA;EACN,CAAC;EACD,IAAI,CAACC,UAAU,EAACC,QAAQ,CAAC,GAACZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,mBAAmB,GAAIC,KAAmC,IAAI;IAChEF,QAAQ,CAACE,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,MAAMC,oBAAoB,GAAG,MAAK;IAC1Bf,KAAK,CAACgB,aAAa,CAACP,UAAU,CAAC;IACnCC,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMO,gBAAgB,GAAIL,KAAqC,IAAI;IAC3D,IAAGA,KAAK,CAACM,GAAG,KAAG,OAAO,EAAC;MAACH,oBAAoB,EAAE;IAAA;EAEtD,CAAC;EAEG,oBAEI;IAAA,wBAEI;MAAA,UAAKf,KAAK,CAACmB;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eACrB;MAAQ,KAAK,EAAEV,UAAW;MAAC,QAAQ,EAAEE,mBAAoB;MAAC,SAAS,EAAEM;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAE,eACxF;MAAQ,OAAO,EAAEF,oBAAqB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAW,eAC7D;MAAA,UAAMd;IAAW;MAAA;MAAA;MAAA;IAAA,QAAO,eAGZ;MAAQ,OAAO,EAAE,MAAID,KAAK,CAACoB,QAAQ,CAAC,KAAK,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eACxD;MAAQ,OAAO,EAAE,MAAIpB,KAAK,CAACoB,QAAQ,CAAC,QAAQ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAC9D;MAAQ,OAAO,EAAE,MAAIpB,KAAK,CAACoB,QAAQ,CAAC,WAAW,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAA;IAAA;IAAA;IAAA;EAAA,QAClE;AAEd,CAAC;AAAC,GAhDYrB,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}