{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/ToDolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = props => {\n  _s();\n  const MapTask = props.task.map(el => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [el.title, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: el.isDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => props.RemoveTask(el.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, el.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 22\n    }, this);\n  });\n  const onClickFilteredButton = nameButton => {\n    props.FilteredButton(nameButton);\n  };\n  let [inputValue, setInputValue] = useState('');\n  const onChangeHandlerInput = event => {\n    setInputValue(event.currentTarget.value);\n  };\n  const AddMessage = () => {\n    props.addMessage(inputValue);\n    setInputValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChangeHandlerInput,\n      value: inputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddMessage,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: MapTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFilteredButton('All'),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFilteredButton('Active'),\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFilteredButton('Completed'),\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"fNxyqMdOrVgwzU9I4cKuq4oRPjc=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Todolist","props","MapTask","task","map","el","title","isDone","RemoveTask","id","onClickFilteredButton","nameButton","FilteredButton","inputValue","setInputValue","onChangeHandlerInput","event","currentTarget","value","AddMessage","addMessage"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/ToDolist.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from 'react';\n\ntype TodolistType = {\n    task:Array<ArrayTaskType>\n    FilteredButton:(nameButton:string)=>void\n    RemoveTask:(id:string)=>void\n    addMessage:(inputValue:string)=>void\n}\n\ntype ArrayTaskType = {\n    id:string\n    title:string;\n    isDone:boolean\n}\n\n\nexport  const Todolist = (props:TodolistType) => {\n\n\n\n      const MapTask =  props.task.map((el)=>{\n            return ( <div>\n                    <li key={el.id}>{el.title}\n                        <input type={\"checkbox\"} checked={el.isDone}/>\n                        <button onClick={()=>props.RemoveTask(el.id)}>X</button>\n                    </li>\n\n                </div>\n            )\n        })\n\n\n    const onClickFilteredButton = (nameButton:string)=> {\nprops.FilteredButton(nameButton)\n    }\n\n    let [inputValue,setInputValue] = useState('')\n\n    const onChangeHandlerInput = (event:ChangeEvent<HTMLInputElement>)=> {\n        setInputValue(event.currentTarget.value)\n    }\n\n    const AddMessage = ()=> {\n        props.addMessage(inputValue)\n        setInputValue('')\n    }\n\n    return (\n        <div>\n             <input onChange={onChangeHandlerInput} value={inputValue}/>\n            <button onClick={AddMessage}>Add</button>\n            <div>\n                {MapTask}\n\n            </div>\n            <button onClick={()=>onClickFilteredButton('All')}>All</button>\n            <button onClick={()=>onClickFilteredButton('Active')}>Active</button>\n            <button onClick={()=>onClickFilteredButton('Completed')}>Completed</button>\n        </div>\n    );\n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAgBC,QAAQ,QAAO,OAAO;AAAC;AAgBnD,OAAQ,MAAMC,QAAQ,GAAIC,KAAkB,IAAK;EAAA;EAI3C,MAAMC,OAAO,GAAID,KAAK,CAACE,IAAI,CAACC,GAAG,CAAEC,EAAE,IAAG;IAChC,oBAAS;MAAA,uBACD;QAAA,WAAiBA,EAAE,CAACC,KAAK,eACrB;UAAO,IAAI,EAAE,UAAW;UAAC,OAAO,EAAED,EAAE,CAACE;QAAO;UAAA;UAAA;UAAA;QAAA,QAAE,eAC9C;UAAQ,OAAO,EAAE,MAAIN,KAAK,CAACO,UAAU,CAACH,EAAE,CAACI,EAAE,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAW;MAAA,GAFnDJ,EAAE,CAACI,EAAE;QAAA;QAAA;QAAA;MAAA;IAGT;MAAA;MAAA;MAAA;IAAA,QAEH;EAEd,CAAC,CAAC;EAGN,MAAMC,qBAAqB,GAAIC,UAAiB,IAAI;IACxDV,KAAK,CAACW,cAAc,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,IAAI,CAACE,UAAU,EAACC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE7C,MAAMgB,oBAAoB,GAAIC,KAAmC,IAAI;IACjEF,aAAa,CAACE,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC;EAC5C,CAAC;EAED,MAAMC,UAAU,GAAG,MAAK;IACpBlB,KAAK,CAACmB,UAAU,CAACP,UAAU,CAAC;IAC5BC,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACI;IAAA,wBACK;MAAO,QAAQ,EAAEC,oBAAqB;MAAC,KAAK,EAAEF;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE,eAC5D;MAAQ,OAAO,EAAEM,UAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eACzC;MAAA,UACKjB;IAAO;MAAA;MAAA;MAAA;IAAA,QAEN,eACN;MAAQ,OAAO,EAAE,MAAIQ,qBAAqB,CAAC,KAAK,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eAC/D;MAAQ,OAAO,EAAE,MAAIA,qBAAqB,CAAC,QAAQ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eACrE;MAAQ,OAAO,EAAE,MAAIA,qBAAqB,CAAC,WAAW,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAA;IAAA;IAAA;IAAA;EAAA,QACzE;AAEd,CAAC;AAAC,GA5CYV,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}