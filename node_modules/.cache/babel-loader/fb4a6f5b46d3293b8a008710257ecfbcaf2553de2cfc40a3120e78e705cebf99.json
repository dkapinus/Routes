{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { ToDolist } from \"./ToDolist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [tasks, setTasks] = useState([{\n    id: 1,\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: 2,\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: 3,\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: 4,\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: 5,\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  const DeleteTask = id => {\n    let newTasks = tasks.filter(el => el.id !== id);\n    setTasks(newTasks);\n  };\n  let [filter, setFilter] = useState('All');\n  const FilteredTask = nameButton => {\n    setFilter(nameButton);\n  };\n  const Filtered = () => {\n    let filtered = tasks;\n    if (filter === 'Active') {\n      filtered = tasks.filter(t => t.isDone === true);\n    }\n    if (filter === 'Completed') {\n      filtered = tasks.filter(t => t.isDone === false);\n    }\n    return filtered;\n  };\n  const addMessages = inputValue => {\n    let newMessages = {\n      id: 1,\n      title: inputValue,\n      isDone: true\n    };\n    setTasks([newMessages, ...tasks]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ToDolist, {\n      task: Filtered(),\n      name: 'What to learn',\n      DeleteTask: DeleteTask,\n      callBack: FilteredTask,\n      onClickButton: addMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JfREwWCEZFHLHiqkqvEeF9C9+p4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToDolist","App","tasks","setTasks","id","title","isDone","DeleteTask","newTasks","filter","el","setFilter","FilteredTask","nameButton","Filtered","filtered","t","addMessages","inputValue","newMessages"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/App.tsx"],"sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\nimport {ToDolist} from \"./ToDolist\";\n\nfunction App() {\n  let [tasks, setTasks] = useState([\n    {id: 1, title: \"HTML&CSS\", isDone: true},\n    {id: 2, title: \"JS\", isDone: true},\n    {id: 3, title: \"ReactJS\", isDone: false},\n    {id: 4, title: \"Rest API\", isDone: false},\n    {id: 5, title: \"GraphQL\", isDone: false},\n  ]);\n\n  const DeleteTask = (id:number)=> {\n    let newTasks = tasks.filter(el=>el.id !== id)\n    setTasks(newTasks)\n  }\n\n  let[filter,setFilter]=useState('All')\n\n  const FilteredTask =(nameButton:string)=> {\n    setFilter(nameButton)\n  }\n\n  const Filtered = ()=> {\n    let filtered = tasks\n    if(filter==='Active'){filtered=tasks.filter(t=>t.isDone===true)}\n    if(filter==='Completed'){filtered=tasks.filter(t=>t.isDone===false)}\n    return filtered\n  }\n\nconst addMessages=(inputValue:string)=> {\n    let newMessages ={id: 1, title: inputValue, isDone: true}\n    setTasks([newMessages,...tasks])\n}\n\n  return (\n    <div className=\"App\">\n    <ToDolist task={Filtered()} name={'What to learn'} DeleteTask={DeleteTask} callBack={FilteredTask}\n              onClickButton={addMessages}    />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,WAAW;AAClB,SAAQC,QAAQ,QAAO,YAAY;AAAC;AAEpC,SAASC,GAAG,GAAG;EAAA;EACb,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAC/B;IAACK,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAI,CAAC,EACxC;IAACF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAI,CAAC,EAClC;IAACF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC,EACxC;IAACF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAK,CAAC,EACzC;IAACF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC,CACzC,CAAC;EAEF,MAAMC,UAAU,GAAIH,EAAS,IAAI;IAC/B,IAAII,QAAQ,GAAGN,KAAK,CAACO,MAAM,CAACC,EAAE,IAAEA,EAAE,CAACN,EAAE,KAAKA,EAAE,CAAC;IAC7CD,QAAQ,CAACK,QAAQ,CAAC;EACpB,CAAC;EAED,IAAG,CAACC,MAAM,EAACE,SAAS,CAAC,GAACZ,QAAQ,CAAC,KAAK,CAAC;EAErC,MAAMa,YAAY,GAAGC,UAAiB,IAAI;IACxCF,SAAS,CAACE,UAAU,CAAC;EACvB,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAK;IACpB,IAAIC,QAAQ,GAAGb,KAAK;IACpB,IAAGO,MAAM,KAAG,QAAQ,EAAC;MAACM,QAAQ,GAACb,KAAK,CAACO,MAAM,CAACO,CAAC,IAAEA,CAAC,CAACV,MAAM,KAAG,IAAI,CAAC;IAAA;IAC/D,IAAGG,MAAM,KAAG,WAAW,EAAC;MAACM,QAAQ,GAACb,KAAK,CAACO,MAAM,CAACO,CAAC,IAAEA,CAAC,CAACV,MAAM,KAAG,KAAK,CAAC;IAAA;IACnE,OAAOS,QAAQ;EACjB,CAAC;EAEH,MAAME,WAAW,GAAEC,UAAiB,IAAI;IACpC,IAAIC,WAAW,GAAE;MAACf,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAEa,UAAU;MAAEZ,MAAM,EAAE;IAAI,CAAC;IACzDH,QAAQ,CAAC,CAACgB,WAAW,EAAC,GAAGjB,KAAK,CAAC,CAAC;EACpC,CAAC;EAEC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBACpB,QAAC,QAAQ;MAAC,IAAI,EAAEY,QAAQ,EAAG;MAAC,IAAI,EAAE,eAAgB;MAAC,UAAU,EAAEP,UAAW;MAAC,QAAQ,EAAEK,YAAa;MACxF,aAAa,EAAEK;IAAY;MAAA;MAAA;MAAA;IAAA;EAAM;IAAA;IAAA;IAAA;EAAA,QACrC;AAEV;AAAC,GAtCQhB,GAAG;AAAA,KAAHA,GAAG;AAwCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}