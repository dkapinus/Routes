{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { v1 } from 'uuid';\nimport { Todolist } from \"./Todolist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  const removeTask = id => {\n    let newTask = tasks.filter(el => el.id != id);\n    setTasks(newTask);\n  };\n  let [nameButton, setNameButton] = useState('All');\n  const ChangeFilter = nameButton => {\n    setNameButton(nameButton);\n  };\n  const Filtered = () => {\n    let filteredTask = tasks;\n    if (nameButton === 'Active') {\n      filteredTask = tasks.filter(el => el.isDone === false);\n    }\n    if (nameButton === 'Completed') {\n      filteredTask = tasks.filter(el => el.isDone === true);\n    }\n    return filteredTask;\n  };\n  const AddMessage = inputValue => {\n    let newTask = {\n      id: v1(),\n      title: inputValue,\n      isDone: true\n    };\n    setTasks([newTask, ...tasks]);\n  };\n  const InputCheck = (event, id) => {\n    setTasks(tasks.map(el => el.id === id ? {\n      ...el,\n      isDone: event\n    } : el));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      task: Filtered(),\n      name: 'What to learn',\n      removeTask: removeTask,\n      ChangeFilter: ChangeFilter,\n      addMessage: AddMessage,\n      InputCheck: InputCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gPRo4qbp6f9c8CT8l2n2/z+4WjM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","v1","Todolist","App","tasks","setTasks","id","title","isDone","removeTask","newTask","filter","el","nameButton","setNameButton","ChangeFilter","Filtered","filteredTask","AddMessage","inputValue","InputCheck","event","map"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/App.tsx"],"sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\nimport {v1} from 'uuid'\nimport {Todolist} from \"./Todolist\";\n\n\nexport type ButtonType ='All'|'Active'|'Completed'\n\nfunction App() {\n  let [tasks, setTasks] = useState([\n    {id: v1(), title: \"HTML&CSS\", isDone: true},\n    {id: v1(), title: \"JS\", isDone: true},\n    {id: v1(), title: \"ReactJS\", isDone: false},\n    {id: v1(), title: \"Rest API\", isDone: false},\n    {id: v1(), title: \"GraphQL\", isDone: false},\n  ]);\n\n\n\nconst removeTask = (id:string)=> {\nlet newTask=tasks.filter((el)=>el.id!=id)\n  setTasks(newTask)\n}\n\nlet [nameButton,setNameButton]=useState<ButtonType>('All')\n\nconst ChangeFilter = (nameButton:ButtonType)=> {\nsetNameButton(nameButton)\n}\n\nconst Filtered = ()=> {\n  let filteredTask=tasks\n  if(nameButton==='Active'){filteredTask=tasks.filter((el)=>el.isDone===false)}\n  if(nameButton==='Completed'){filteredTask=tasks.filter((el)=>el.isDone===true)}\n  return filteredTask\n}\n\nconst AddMessage = (inputValue:string)=> {\n  let newTask={id: v1(), title: inputValue, isDone: true}\n  setTasks([newTask,...tasks])\n}\nconst InputCheck = (event:boolean,id:string)=> {\n  setTasks(tasks.map((el)=>el.id=== id ? {...el,isDone:event}:el))\n\n}\n  return (\n    <div className=\"App\">\n   <Todolist task={Filtered()} name={'What to learn'} removeTask={removeTask}\n             ChangeFilter={ChangeFilter}\n             addMessage={AddMessage}\n             InputCheck={InputCheck}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,WAAW;AAClB,SAAQC,EAAE,QAAO,MAAM;AACvB,SAAQC,QAAQ,QAAO,YAAY;AAAC;AAKpC,SAASC,GAAG,GAAG;EAAA;EACb,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAC/B;IAACM,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAI,CAAC,EAC3C;IAACF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAI,CAAC,EACrC;IAACF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC,EAC3C;IAACF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAK,CAAC,EAC5C;IAACF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC,CAC5C,CAAC;EAIJ,MAAMC,UAAU,GAAIH,EAAS,IAAI;IACjC,IAAII,OAAO,GAACN,KAAK,CAACO,MAAM,CAAEC,EAAE,IAAGA,EAAE,CAACN,EAAE,IAAEA,EAAE,CAAC;IACvCD,QAAQ,CAACK,OAAO,CAAC;EACnB,CAAC;EAED,IAAI,CAACG,UAAU,EAACC,aAAa,CAAC,GAACd,QAAQ,CAAa,KAAK,CAAC;EAE1D,MAAMe,YAAY,GAAIF,UAAqB,IAAI;IAC/CC,aAAa,CAACD,UAAU,CAAC;EACzB,CAAC;EAED,MAAMG,QAAQ,GAAG,MAAK;IACpB,IAAIC,YAAY,GAACb,KAAK;IACtB,IAAGS,UAAU,KAAG,QAAQ,EAAC;MAACI,YAAY,GAACb,KAAK,CAACO,MAAM,CAAEC,EAAE,IAAGA,EAAE,CAACJ,MAAM,KAAG,KAAK,CAAC;IAAA;IAC5E,IAAGK,UAAU,KAAG,WAAW,EAAC;MAACI,YAAY,GAACb,KAAK,CAACO,MAAM,CAAEC,EAAE,IAAGA,EAAE,CAACJ,MAAM,KAAG,IAAI,CAAC;IAAA;IAC9E,OAAOS,YAAY;EACrB,CAAC;EAED,MAAMC,UAAU,GAAIC,UAAiB,IAAI;IACvC,IAAIT,OAAO,GAAC;MAACJ,EAAE,EAAEL,EAAE,EAAE;MAAEM,KAAK,EAAEY,UAAU;MAAEX,MAAM,EAAE;IAAI,CAAC;IACvDH,QAAQ,CAAC,CAACK,OAAO,EAAC,GAAGN,KAAK,CAAC,CAAC;EAC9B,CAAC;EACD,MAAMgB,UAAU,GAAG,CAACC,KAAa,EAACf,EAAS,KAAI;IAC7CD,QAAQ,CAACD,KAAK,CAACkB,GAAG,CAAEV,EAAE,IAAGA,EAAE,CAACN,EAAE,KAAIA,EAAE,GAAG;MAAC,GAAGM,EAAE;MAACJ,MAAM,EAACa;IAAK,CAAC,GAACT,EAAE,CAAC,CAAC;EAElE,CAAC;EACC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBACrB,QAAC,QAAQ;MAAC,IAAI,EAAEI,QAAQ,EAAG;MAAC,IAAI,EAAE,eAAgB;MAAC,UAAU,EAAEP,UAAW;MAChE,YAAY,EAAEM,YAAa;MAC3B,UAAU,EAAEG,UAAW;MACvB,UAAU,EAAEE;IAAW;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QAC5B;AAEV;AAAC,GA7CQjB,GAAG;AAAA,KAAHA,GAAG;AA+CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}