{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  const [filter, setFilter] = useState('all');\n  const AddNameButton = nameButton => {\n    setFilter(nameButton);\n  };\n  const Filtered = () => {\n    let newTask = tasks;\n    if (filter === 'active') {\n      newTask.map(el => el.isDone === false);\n    }\n    if (filter === 'completed') {\n      newTask.map(el => el.isDone === true);\n    }\n    return newTask;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: 'What to learn',\n      tasks: Filtered(),\n      AddNameButton: AddNameButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"OULv3LoVXtTURQZHhtQtFQ34VaM=\");\n_c = App;\nexport default App;\n\n//-------------------------------------------------------------------------------------------------------\n//\n// export type FilterValuesType = \"all\" | \"active\" | \"completed\";\n//\n// function App() {\n//\n//     let [tasks, setTasks] = useState([\n//         {id: v1(), title: \"HTML&CSS\", isDone: true},\n//         {id: v1(), title: \"JS\", isDone: true},\n//         {id: v1(), title: \"ReactJS\", isDone: false},\n//         {id: v1(), title: \"Rest API\", isDone: false},\n//         {id: v1(), title: \"GraphQL\", isDone: false},\n//     ]);\n//\n//     function removeTask(id: string) {\n//         let filteredTasks = tasks.filter(t => t.id != id);\n//         setTasks(filteredTasks);\n//     }\n//\n//     function addTask(title: string) {\n//         let task = {id: v1(), title: title, isDone: false};\n//         let newTasks = [task, ...tasks];\n//         setTasks(newTasks);\n//     }\n//\n//     let [filter, setFilter] = useState<FilterValuesType>(\"all\");\n//\n//     let tasksForTodolist = tasks;\n//\n//     if (filter === \"active\") {\n//         tasksForTodolist = tasks.filter(t => t.isDone === false);\n//     }\n//     if (filter === \"completed\") {\n//         tasksForTodolist = tasks.filter(t => t.isDone === true);\n//     }\n//\n//     function changeFilter(value: FilterValuesType) {\n//         setFilter(value);\n//     }\n//\n//\n//     return (\n//         <div className=\"App\">\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}>\n//                 <div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                 </div>\n//             </Todolist>\n//\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}>\n//                 <div>\n//                     <div>A lot of boring information</div>\n//                     <div>A lot of boring information</div>\n//                     <div>A lot of boring information</div>\n//                     <input placeholder={'A lot of boring information'}/>\n//                     <div>\n//                         <button>Boring Button 1</button>\n//                         <button>Boring Button 2</button>\n//                         <button>Boring Button 3</button>\n//                     </div>\n//                 </div>\n//             </Todolist>\n//\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}/>\n//         </div>\n//     );\n// }\n//\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","App","tasks","setTasks","id","title","isDone","filter","setFilter","AddNameButton","nameButton","Filtered","newTask","map","el"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport { v1 } from 'uuid';\r\n\r\n\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\nfunction App() {\r\n\r\n    let [tasks, setTasks] = useState([\r\n        { id: v1(), title: \"HTML&CSS\", isDone: true },\r\n        { id: v1(), title: \"JS\", isDone: true },\r\n        { id: v1(), title: \"ReactJS\", isDone: false },\r\n        { id: v1(), title: \"Rest API\", isDone: false },\r\n        { id: v1(), title: \"GraphQL\", isDone: false },\r\n    ]);\r\n\r\n\r\n    const[filter,setFilter]=useState('all')\r\n\r\n       const AddNameButton = (nameButton:FilterValuesType)=> {\r\n    setFilter(nameButton)\r\n       }\r\n\r\n       const Filtered = ()=> {\r\n        let newTask=tasks\r\n        if(filter==='active'){newTask.map((el)=>el.isDone===false)}\r\n        if(filter==='completed'){newTask.map((el)=>el.isDone===true)}\r\n        \r\n        return newTask\r\n       }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist\r\n                title={'What to learn'}\r\n                tasks={Filtered()}\r\n                AddNameButton={AddNameButton}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//-------------------------------------------------------------------------------------------------------\r\n//\r\n// export type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n//\r\n// function App() {\r\n//\r\n//     let [tasks, setTasks] = useState([\r\n//         {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n//         {id: v1(), title: \"JS\", isDone: true},\r\n//         {id: v1(), title: \"ReactJS\", isDone: false},\r\n//         {id: v1(), title: \"Rest API\", isDone: false},\r\n//         {id: v1(), title: \"GraphQL\", isDone: false},\r\n//     ]);\r\n//\r\n//     function removeTask(id: string) {\r\n//         let filteredTasks = tasks.filter(t => t.id != id);\r\n//         setTasks(filteredTasks);\r\n//     }\r\n//\r\n//     function addTask(title: string) {\r\n//         let task = {id: v1(), title: title, isDone: false};\r\n//         let newTasks = [task, ...tasks];\r\n//         setTasks(newTasks);\r\n//     }\r\n//\r\n//     let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n//\r\n//     let tasksForTodolist = tasks;\r\n//\r\n//     if (filter === \"active\") {\r\n//         tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n//     }\r\n//     if (filter === \"completed\") {\r\n//         tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n//     }\r\n//\r\n//     function changeFilter(value: FilterValuesType) {\r\n//         setFilter(value);\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <div className=\"App\">\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}>\r\n//                 <div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                 </div>\r\n//             </Todolist>\r\n//\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}>\r\n//                 <div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <input placeholder={'A lot of boring information'}/>\r\n//                     <div>\r\n//                         <button>Boring Button 1</button>\r\n//                         <button>Boring Button 2</button>\r\n//                         <button>Boring Button 3</button>\r\n//                     </div>\r\n//                 </div>\r\n//             </Todolist>\r\n//\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}/>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,WAAW;AAClB,SAAQC,QAAQ,QAAO,YAAY;AACnC,SAASC,EAAE,QAAQ,MAAM;AAAC;AAM1B,SAASC,GAAG,GAAG;EAAA;EAEX,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAC7B;IAAEM,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAK,CAAC,EAC7C;IAAEF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAK,CAAC,EACvC;IAAEF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAM,CAAC,EAC7C;IAAEF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAM,CAAC,EAC9C;IAAEF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAM,CAAC,CAChD,CAAC;EAGF,MAAK,CAACC,MAAM,EAACC,SAAS,CAAC,GAACV,QAAQ,CAAC,KAAK,CAAC;EAEpC,MAAMW,aAAa,GAAIC,UAA2B,IAAI;IACzDF,SAAS,CAACE,UAAU,CAAC;EAClB,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAK;IACrB,IAAIC,OAAO,GAACV,KAAK;IACjB,IAAGK,MAAM,KAAG,QAAQ,EAAC;MAACK,OAAO,CAACC,GAAG,CAAEC,EAAE,IAAGA,EAAE,CAACR,MAAM,KAAG,KAAK,CAAC;IAAA;IAC1D,IAAGC,MAAM,KAAG,WAAW,EAAC;MAACK,OAAO,CAACC,GAAG,CAAEC,EAAE,IAAGA,EAAE,CAACR,MAAM,KAAG,IAAI,CAAC;IAAA;IAE5D,OAAOM,OAAO;EACf,CAAC;EAGJ,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,uBAChB,QAAC,QAAQ;MACL,KAAK,EAAE,eAAgB;MACvB,KAAK,EAAED,QAAQ,EAAG;MAClB,aAAa,EAAEF;IAAc;MAAA;MAAA;MAAA;IAAA;EAC/B;IAAA;IAAA;IAAA;EAAA,QACA;AAEd;AAAC,GAnCQR,GAAG;AAAA,KAAHA,GAAG;AAqCZ,eAAeA,GAAG;;AA8BlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}