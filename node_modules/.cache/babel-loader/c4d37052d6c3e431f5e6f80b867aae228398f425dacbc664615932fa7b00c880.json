{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/ToDolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToDolist = props => {\n  _s();\n  const onClickHandlerDelete = id => {\n    props.deleteButton(id);\n  };\n  const onClickHandlerButton = nameButton => {\n    props.addNameButton(nameButton);\n  };\n  let [valueInput, setValueInput] = useState('');\n  const onChangeHandlerInput = event => {\n    setValueInput(event.currentTarget.value);\n  };\n  const onKeyDownHandlerInput = event => {\n    if (event.key === 'Enter') {\n      setValueInput(event.key);\n    }\n  };\n  const onClickHandlerButtonAddMessage = () => {\n    props.addMessage(valueInput);\n    setValueInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: valueInput,\n      onChange: onChangeHandlerInput,\n      onKeyDown: onKeyDownHandlerInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickHandlerButtonAddMessage,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.task.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [el.title, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: el.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onClickHandlerDelete(el.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickHandlerButton('All'),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickHandlerButton('Active'),\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickHandlerButton('Completed'),\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(ToDolist, \"L8a+Rnp3at4gBADpSfDaV4eNl3k=\");\n_c = ToDolist;\nvar _c;\n$RefreshReg$(_c, \"ToDolist\");","map":{"version":3,"names":["React","useState","ToDolist","props","onClickHandlerDelete","id","deleteButton","onClickHandlerButton","nameButton","addNameButton","valueInput","setValueInput","onChangeHandlerInput","event","currentTarget","value","onKeyDownHandlerInput","key","onClickHandlerButtonAddMessage","addMessage","title","task","map","el","isDone"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/ToDolist.tsx"],"sourcesContent":["import React, {ChangeEvent, useState,KeyboardEvent} from 'react';\n\n\ntype ToDolistType = {\n    title:string\n    task:Array<TaskType>\n    deleteButton:(id:number)=>void\n    addNameButton:(nameButton:string)=>void\n    addMessage:(valueInput:string)=>void\n}\n\ntype TaskType = {\n    id:number;\n    title:string;\n    isDone:boolean\n}\n\n\nexport  const ToDolist = (props:ToDolistType) => {\n\nconst onClickHandlerDelete = (id:number)=> {\n    props.deleteButton(id)\n}\n\n    const onClickHandlerButton = (nameButton:string)=> {\n    props.addNameButton(nameButton)\n\n    }\n\n    let [valueInput,setValueInput]=useState('')\n\n    const onChangeHandlerInput =(event:ChangeEvent<HTMLInputElement>)=> {\n    setValueInput(event.currentTarget.value)\n    }\n\n    const onKeyDownHandlerInput =(event:KeyboardEvent<HTMLInputElement>)=> {\n        if (event.key==='Enter'){setValueInput(event.key)}\n    }\n\n    const onClickHandlerButtonAddMessage = ()=> {\n    props.addMessage(valueInput)\n        setValueInput('')\n    }\n    return (\n        <div>\n            <h3>{props.title}</h3>\n            <input value={valueInput} onChange={onChangeHandlerInput} onKeyDown={onKeyDownHandlerInput}/>\n            <button onClick={onClickHandlerButtonAddMessage}>Add</button>\n            <div >\n                {props.task.map((el)=>{\n                    return (\n                        <li key={el.id}>\n                            {el.title}\n                            <input type={\"checkbox\"} checked={el.isDone}/>\n                            <button onClick={()=>onClickHandlerDelete(el.id)}>x</button>\n                        </li>\n\n                    )\n\n                })}\n\n            </div>\n            <button onClick={()=>onClickHandlerButton('All')}>All</button>\n            <button onClick={()=>onClickHandlerButton('Active')}>Active</button>\n            <button onClick={()=>onClickHandlerButton('Completed')}>Completed</button>\n        </div>\n    );\n};\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAgBC,QAAQ,QAAqB,OAAO;AAAC;AAkBjE,OAAQ,MAAMC,QAAQ,GAAIC,KAAkB,IAAK;EAAA;EAEjD,MAAMC,oBAAoB,GAAIC,EAAS,IAAI;IACvCF,KAAK,CAACG,YAAY,CAACD,EAAE,CAAC;EAC1B,CAAC;EAEG,MAAME,oBAAoB,GAAIC,UAAiB,IAAI;IACnDL,KAAK,CAACM,aAAa,CAACD,UAAU,CAAC;EAE/B,CAAC;EAED,IAAI,CAACE,UAAU,EAACC,aAAa,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAMW,oBAAoB,GAAGC,KAAmC,IAAI;IACpEF,aAAa,CAACE,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC;EACxC,CAAC;EAED,MAAMC,qBAAqB,GAAGH,KAAqC,IAAI;IACnE,IAAIA,KAAK,CAACI,GAAG,KAAG,OAAO,EAAC;MAACN,aAAa,CAACE,KAAK,CAACI,GAAG,CAAC;IAAA;EACrD,CAAC;EAED,MAAMC,8BAA8B,GAAG,MAAK;IAC5Cf,KAAK,CAACgB,UAAU,CAACT,UAAU,CAAC;IACxBC,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EACD,oBACI;IAAA,wBACI;MAAA,UAAKR,KAAK,CAACiB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAO,KAAK,EAAEV,UAAW;MAAC,QAAQ,EAAEE,oBAAqB;MAAC,SAAS,EAAEI;IAAsB;MAAA;MAAA;MAAA;IAAA,QAAE,eAC7F;MAAQ,OAAO,EAAEE,8BAA+B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eAC7D;MAAA,UACKf,KAAK,CAACkB,IAAI,CAACC,GAAG,CAAEC,EAAE,IAAG;QAClB,oBACI;UAAA,WACKA,EAAE,CAACH,KAAK,eACT;YAAO,IAAI,EAAE,UAAW;YAAC,OAAO,EAAEG,EAAE,CAACC;UAAO;YAAA;YAAA;YAAA;UAAA,QAAE,eAC9C;YAAQ,OAAO,EAAE,MAAIpB,oBAAoB,CAACmB,EAAE,CAAClB,EAAE,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW;QAAA,GAHvDkB,EAAE,CAAClB,EAAE;UAAA;UAAA;UAAA;QAAA,QAIT;MAIb,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEA,eACN;MAAQ,OAAO,EAAE,MAAIE,oBAAoB,CAAC,KAAK,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eAC9D;MAAQ,OAAO,EAAE,MAAIA,oBAAoB,CAAC,QAAQ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eACpE;MAAQ,OAAO,EAAE,MAAIA,oBAAoB,CAAC,WAAW,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAA;IAAA;IAAA;IAAA;EAAA,QACxE;AAEd,CAAC;AAAC,GAjDYL,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}