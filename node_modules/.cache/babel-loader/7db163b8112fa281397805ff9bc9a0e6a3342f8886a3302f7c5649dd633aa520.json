{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = props => {\n  _s();\n  const onClickFiltered = nameButton => {\n    props.Filtered(nameButton);\n  };\n  const onclickRemoveTask = id => {\n    props.removeTask(id);\n  };\n  let [inputValue, setInputValue] = useState('');\n  const onChangeInput = event => {\n    setInputValue(event.currentTarget.value);\n  };\n  const AddMessage = () => {\n    // debugger\n    if (inputValue.trim() !== '') {\n      props.AddMessage(inputValue.trim());\n    } else {\n      error();\n    }\n    setInputValue('');\n  };\n  const onKeyInputDown = event => {\n    if (event.key === 'Enter') {\n      AddMessage();\n    }\n  };\n  const error = () => {\n    if (inputValue !== '') {\n      setInputValue('Title is qiute');\n    }\n  };\n  const ChangeCheckBoxValue = (event, id) => {\n    // props.ChangeCheckBoxValue(event.currentTarget.checked)\n    props.ChangeCheckBoxValue(event, id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChangeInput,\n      value: inputValue,\n      onKeyDown: onKeyInputDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddMessage,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), props.task.map(el => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => ChangeCheckBoxValue(event.currentTarget.checked, el.id),\n          type: 'checkbox',\n          checked: el.isDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 34\n        }, this), el.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onclickRemoveTask(el.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 34\n        }, this)]\n      }, el.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 30\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFiltered('All'),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFiltered('Active'),\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFiltered('Completed'),\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"fNxyqMdOrVgwzU9I4cKuq4oRPjc=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Todolist","props","onClickFiltered","nameButton","Filtered","onclickRemoveTask","id","removeTask","inputValue","setInputValue","onChangeInput","event","currentTarget","value","AddMessage","trim","error","onKeyInputDown","key","ChangeCheckBoxValue","task","map","el","checked","isDone","title"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent,KeyboardEvent, useState} from 'react';\nimport {ButtonType} from \"./App\";\n\ntype TodolistType = {\n\n    task: Array<TaskType>\n    Filtered:(nameButton:ButtonType)=>void\n    removeTask:(id:string)=>void\n    AddMessage:(inputValue:string)=>void\n    ChangeCheckBoxValue:(event:boolean, id:string)=>void\n}\n\ntype TaskType = {\n    id:string;\n    title:string;\n    isDone:boolean;\n}\n\nexport  const Todolist = (props:TodolistType) => {\n\n\n    const onClickFiltered = (nameButton:ButtonType)=>{\n        props.Filtered(nameButton)\n    }\n\n    const onclickRemoveTask = (id:string)=> {\n        props.removeTask(id)\n    }\n\n    let[inputValue,setInputValue]=useState('')\n\n    const onChangeInput = (event:ChangeEvent<HTMLInputElement>)=> {\n        setInputValue(event.currentTarget.value)\n    }\n\n    const AddMessage = ()=> {\n    // debugger\nif(inputValue.trim()!=='')\n{props.AddMessage(inputValue.trim())}\nelse {error()}\n        setInputValue('')\n    }\n\n    const onKeyInputDown = (event:KeyboardEvent<HTMLInputElement>)=> {\n   if(event.key==='Enter'){AddMessage()}\n\n    }\n\n\nconst error = ()=> {\n    if(inputValue !=='')\n    { setInputValue('Title is qiute')}\n\n}\n\n\n\n   const  ChangeCheckBoxValue = (event:boolean,id:string)=> {\n        // props.ChangeCheckBoxValue(event.currentTarget.checked)\n       props.ChangeCheckBoxValue(event,id)\n   }\n    return (\n        <div>\n            <input onChange={onChangeInput} value={inputValue} onKeyDown={onKeyInputDown}/>\n            <button onClick={AddMessage}>Add</button>\n                 {props.task.map((el)=>{\n                     return (\n\n                             <li key={el.id}>\n                                 <input onChange={(event)=>ChangeCheckBoxValue(event.currentTarget.checked,el.id)} type={'checkbox'} checked={el.isDone}/>\n                                 {el.title}\n                                 <button onClick={()=>onclickRemoveTask(el.id)}>X</button>\n                             </li>\n\n\n\n                     )\n                 })\n                 }\n\n              <button onClick={()=>onClickFiltered('All')}>All</button>\n              <button onClick={()=>onClickFiltered('Active')}>Active</button>\n              <button onClick={()=>onClickFiltered('Completed')}>Completed</button>\n        </div>\n    );\n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA8BC,QAAQ,QAAO,OAAO;AAAC;AAkBjE,OAAQ,MAAMC,QAAQ,GAAIC,KAAkB,IAAK;EAAA;EAG7C,MAAMC,eAAe,GAAIC,UAAqB,IAAG;IAC7CF,KAAK,CAACG,QAAQ,CAACD,UAAU,CAAC;EAC9B,CAAC;EAED,MAAME,iBAAiB,GAAIC,EAAS,IAAI;IACpCL,KAAK,CAACM,UAAU,CAACD,EAAE,CAAC;EACxB,CAAC;EAED,IAAG,CAACE,UAAU,EAACC,aAAa,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,aAAa,GAAIC,KAAmC,IAAI;IAC1DF,aAAa,CAACE,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC;EAC5C,CAAC;EAED,MAAMC,UAAU,GAAG,MAAK;IACxB;IACJ,IAAGN,UAAU,CAACO,IAAI,EAAE,KAAG,EAAE,EACzB;MAACd,KAAK,CAACa,UAAU,CAACN,UAAU,CAACO,IAAI,EAAE,CAAC;IAAA,CAAC,MAChC;MAACC,KAAK,EAAE;IAAA;IACLP,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAMQ,cAAc,GAAIN,KAAqC,IAAI;IAClE,IAAGA,KAAK,CAACO,GAAG,KAAG,OAAO,EAAC;MAACJ,UAAU,EAAE;IAAA;EAEnC,CAAC;EAGL,MAAME,KAAK,GAAG,MAAK;IACf,IAAGR,UAAU,KAAI,EAAE,EACnB;MAAEC,aAAa,CAAC,gBAAgB,CAAC;IAAA;EAErC,CAAC;EAIE,MAAOU,mBAAmB,GAAG,CAACR,KAAa,EAACL,EAAS,KAAI;IACpD;IACDL,KAAK,CAACkB,mBAAmB,CAACR,KAAK,EAACL,EAAE,CAAC;EACvC,CAAC;EACA,oBACI;IAAA,wBACI;MAAO,QAAQ,EAAEI,aAAc;MAAC,KAAK,EAAEF,UAAW;MAAC,SAAS,EAAES;IAAe;MAAA;MAAA;MAAA;IAAA,QAAE,eAC/E;MAAQ,OAAO,EAAEH,UAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,EACnCb,KAAK,CAACmB,IAAI,CAACC,GAAG,CAAEC,EAAE,IAAG;MAClB,oBAEQ;QAAA,wBACI;UAAO,QAAQ,EAAGX,KAAK,IAAGQ,mBAAmB,CAACR,KAAK,CAACC,aAAa,CAACW,OAAO,EAACD,EAAE,CAAChB,EAAE,CAAE;UAAC,IAAI,EAAE,UAAW;UAAC,OAAO,EAAEgB,EAAE,CAACE;QAAO;UAAA;UAAA;UAAA;QAAA,QAAE,EACxHF,EAAE,CAACG,KAAK,eACT;UAAQ,OAAO,EAAE,MAAIpB,iBAAiB,CAACiB,EAAE,CAAChB,EAAE,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAW;MAAA,GAHpDgB,EAAE,CAAChB,EAAE;QAAA;QAAA;QAAA;MAAA,QAIT;IAKjB,CAAC,CAAC,eAGL;MAAQ,OAAO,EAAE,MAAIJ,eAAe,CAAC,KAAK,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eACzD;MAAQ,OAAO,EAAE,MAAIA,eAAe,CAAC,QAAQ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAC/D;MAAQ,OAAO,EAAE,MAAIA,eAAe,CAAC,WAAW,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAA;IAAA;IAAA;IAAA;EAAA,QACrE;AAEd,CAAC;AAAC,GAnEYF,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}