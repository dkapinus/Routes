{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/ToDolist.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.task.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [el.title, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: el.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","Todolist","props","task","map","el","title","isDone"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/ToDolist.tsx"],"sourcesContent":["import React from 'react';\n\ntype TodolistType = {\n    task:Array<ArrayTaskType>\n}\n\ntype ArrayTaskType = {\n    id:string\n    title:string;\n    isDone:boolean\n}\n\n\nexport  const Todolist = (props:TodolistType) => {\n    return (\n        <div>\n     <input/>\n            <button>Add</button>\n\n\n            <div>\n                {props.task.map((el)=>{\n                    return (\n                        <li>{el.title}\n                        <input type={\"checkbox\"} checked={el.isDone}/>\n                        </li>\n\n                    )\n                        \n                })}\n\n            </div>\n        </div>\n    );\n};\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAa1B,OAAQ,MAAMC,QAAQ,GAAIC,KAAkB,IAAK;EAC7C,oBACI;IAAA,wBACH;MAAA;MAAA;MAAA;IAAA,QAAQ,eACD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eAGpB;MAAA,UACKA,KAAK,CAACC,IAAI,CAACC,GAAG,CAAEC,EAAE,IAAG;QAClB,oBACI;UAAA,WAAKA,EAAE,CAACC,KAAK,eACb;YAAO,IAAI,EAAE,UAAW;YAAC,OAAO,EAAED,EAAE,CAACE;UAAO;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QACzC;MAIb,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,KArBYN,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}