{"ast":null,"code":"/**\n * A set of all the parents currently being observe. This is the only non weak\n * registry.\n */\nconst parents = new Set();\n/**\n * Element coordinates that is constantly kept up to date.\n */\nconst coords = new WeakMap();\n/**\n * Siblings of elements that have been removed from the dom.\n */\nconst siblings = new WeakMap();\n/**\n * Animations that are currently running.\n */\nconst animations = new WeakMap();\n/**\n * A map of existing intersection observers used to track element movements.\n */\nconst intersections = new WeakMap();\n/**\n * Intervals for automatically checking the position of elements occasionally.\n */\nconst intervals = new WeakMap();\n/**\n * The configuration options for each group of elements.\n */\nconst options = new WeakMap();\n/**\n * Debounce counters by id, used to debounce calls to update positions.\n */\nconst debounces = new WeakMap();\n/**\n * All parents that are currently enabled are tracked here.\n */\nconst enabled = new WeakSet();\n/**\n * The document used to calculate transitions.\n */\nlet root;\n/**\n * Used to sign an element as the target.\n */\nconst TGT = \"__aa_tgt\";\n/**\n * Used to sign an element as being part of a removal.\n */\nconst DEL = \"__aa_del\";\n/**\n * Callback for handling all mutations.\n * @param mutations - A mutation list\n */\nconst handleMutations = mutations => {\n  const elements = getElements(mutations);\n  // If elements is \"false\" that means this mutation that should be ignored.\n  if (elements) {\n    elements.forEach(el => animate(el));\n  }\n};\n/**\n *\n * @param entries - Elements that have been resized.\n */\nconst handleResizes = entries => {\n  entries.forEach(entry => {\n    if (entry.target === root) updateAllPos();\n    if (coords.has(entry.target)) updatePos(entry.target);\n  });\n};\n/**\n * Observe this elements position.\n * @param el - The element to observe the position of.\n */\nfunction observePosition(el) {\n  const oldObserver = intersections.get(el);\n  oldObserver === null || oldObserver === void 0 ? void 0 : oldObserver.disconnect();\n  let rect = coords.get(el);\n  let invocations = 0;\n  const buffer = 5;\n  if (!rect) {\n    rect = getCoords(el);\n    coords.set(el, rect);\n  }\n  const {\n    offsetWidth,\n    offsetHeight\n  } = root;\n  const rootMargins = [rect.top - buffer, offsetWidth - (rect.left + buffer + rect.width), offsetHeight - (rect.top + buffer + rect.height), rect.left - buffer];\n  const rootMargin = rootMargins.map(px => `${-1 * Math.floor(px)}px`).join(\" \");\n  const observer = new IntersectionObserver(() => {\n    ++invocations > 1 && updatePos(el);\n  }, {\n    root,\n    threshold: 1,\n    rootMargin\n  });\n  observer.observe(el);\n  intersections.set(el, observer);\n}\n/**\n * Update the exact position of a given element.\n * @param el - An element to update the position of.\n */\nfunction updatePos(el) {\n  clearTimeout(debounces.get(el));\n  const optionsOrPlugin = getOptions(el);\n  const delay = typeof optionsOrPlugin === \"function\" ? 500 : optionsOrPlugin.duration;\n  debounces.set(el, setTimeout(async () => {\n    const currentAnimation = animations.get(el);\n    if (!currentAnimation || (await currentAnimation.finished)) {\n      coords.set(el, getCoords(el));\n      observePosition(el);\n    }\n  }, delay));\n}\n/**\n * Updates all positions that are currently being tracked.\n */\nfunction updateAllPos() {\n  clearTimeout(debounces.get(root));\n  debounces.set(root, setTimeout(() => {\n    parents.forEach(parent => forEach(parent, el => lowPriority(() => updatePos(el))));\n  }, 100));\n}\n/**\n * Its possible for a quick scroll or other fast events to get past the\n * intersection observer, so occasionally we need want \"cold-poll\" for the\n * latests and greatest position. We try to do this in the most non-disruptive\n * fashion possible. First we only do this ever couple seconds, staggard by a\n * random offset.\n * @param el - Element\n */\nfunction poll(el) {\n  setTimeout(() => {\n    intervals.set(el, setInterval(() => lowPriority(updatePos.bind(null, el)), 2000));\n  }, Math.round(2000 * Math.random()));\n}\n/**\n * Perform some operation that is non critical at some point.\n * @param callback\n */\nfunction lowPriority(callback) {\n  if (typeof requestIdleCallback === \"function\") {\n    requestIdleCallback(() => callback());\n  } else {\n    requestAnimationFrame(() => callback());\n  }\n}\n/**\n * The mutation observer responsible for watching each root element.\n */\nlet mutations;\n/**\n * A resize observer, responsible for recalculating elements on resize.\n */\nlet resize;\n/**\n * If this is in a browser, initialize our Web APIs\n */\nif (typeof window !== \"undefined\") {\n  root = document.documentElement;\n  mutations = new MutationObserver(handleMutations);\n  resize = new ResizeObserver(handleResizes);\n  resize.observe(root);\n}\n/**\n * Retrieves all the elements that may have been affected by the last mutation\n * including ones that have been removed and are no longer in the DOM.\n * @param mutations - A mutation list.\n * @returns\n */\nfunction getElements(mutations) {\n  const observedNodes = mutations.reduce((nodes, mutation) => {\n    return [...nodes, ...Array.from(mutation.addedNodes), ...Array.from(mutation.removedNodes)];\n  }, []);\n  // Short circuit if _only_ comment nodes are observed\n  const onlyCommentNodesObserved = observedNodes.every(node => node.nodeName === \"#comment\");\n  if (onlyCommentNodesObserved) return false;\n  return mutations.reduce((elements, mutation) => {\n    // Short circuit if we find a purposefully deleted node.\n    if (elements === false) return false;\n    if (mutation.target instanceof Element) {\n      target(mutation.target);\n      if (!elements.has(mutation.target)) {\n        elements.add(mutation.target);\n        for (let i = 0; i < mutation.target.children.length; i++) {\n          const child = mutation.target.children.item(i);\n          if (!child) continue;\n          if (DEL in child) return false;\n          target(mutation.target, child);\n          elements.add(child);\n        }\n      }\n      if (mutation.removedNodes.length) {\n        for (let i = 0; i < mutation.removedNodes.length; i++) {\n          const child = mutation.removedNodes[i];\n          if (DEL in child) return false;\n          if (child instanceof Element) {\n            elements.add(child);\n            target(mutation.target, child);\n            siblings.set(child, [mutation.previousSibling, mutation.nextSibling]);\n          }\n        }\n      }\n    }\n    return elements;\n  }, new Set());\n}\n/**\n * Assign the target to an element.\n * @param el - The root element\n * @param child\n */\nfunction target(el, child) {\n  if (!child && !(TGT in el)) Object.defineProperty(el, TGT, {\n    value: el\n  });else if (child && !(TGT in child)) Object.defineProperty(child, TGT, {\n    value: el\n  });\n}\n/**\n * Determines what kind of change took place on the given element and then\n * performs the proper animation based on that.\n * @param el - The specific element to animate.\n */\nfunction animate(el) {\n  var _a;\n  const isMounted = root.contains(el);\n  const preExisting = coords.has(el);\n  if (isMounted && siblings.has(el)) siblings.delete(el);\n  if (animations.has(el)) {\n    (_a = animations.get(el)) === null || _a === void 0 ? void 0 : _a.cancel();\n  }\n  if (preExisting && isMounted) {\n    remain(el);\n  } else if (preExisting && !isMounted) {\n    remove(el);\n  } else {\n    add(el);\n  }\n}\n/**\n * Removes all non-digits from a string and casts to a number.\n * @param str - A string containing a pixel value.\n * @returns\n */\nfunction raw(str) {\n  return Number(str.replace(/[^0-9.\\-]/g, \"\"));\n}\n/**\n * Get the coordinates of elements adjusted for scroll position.\n * @param el - Element\n * @returns\n */\nfunction getCoords(el) {\n  const rect = el.getBoundingClientRect();\n  return {\n    top: rect.top + window.scrollY,\n    left: rect.left + window.scrollX,\n    width: rect.width,\n    height: rect.height\n  };\n}\n/**\n * Returns the width/height that the element should be transitioned between.\n * This takes into account box-sizing.\n * @param el - Element being animated\n * @param oldCoords - Old set of Coordinates coordinates\n * @param newCoords - New set of Coordinates coordinates\n * @returns\n */\nfunction getTransitionSizes(el, oldCoords, newCoords) {\n  let widthFrom = oldCoords.width;\n  let heightFrom = oldCoords.height;\n  let widthTo = newCoords.width;\n  let heightTo = newCoords.height;\n  const styles = getComputedStyle(el);\n  const sizing = styles.getPropertyValue(\"box-sizing\");\n  if (sizing === \"content-box\") {\n    const paddingY = raw(styles.paddingTop) + raw(styles.paddingBottom) + raw(styles.borderTopWidth) + raw(styles.borderBottomWidth);\n    const paddingX = raw(styles.paddingLeft) + raw(styles.paddingRight) + raw(styles.borderRightWidth) + raw(styles.borderLeftWidth);\n    widthFrom -= paddingX;\n    widthTo -= paddingX;\n    heightFrom -= paddingY;\n    heightTo -= paddingY;\n  }\n  return [widthFrom, widthTo, heightFrom, heightTo].map(Math.round);\n}\n/**\n * Retrieves animation options for the current element.\n * @param el - Element to retrieve options for.\n * @returns\n */\nfunction getOptions(el) {\n  return TGT in el && options.has(el[TGT]) ? options.get(el[TGT]) : {\n    duration: 250,\n    easing: \"ease-in-out\"\n  };\n}\n/**\n * Returns the target of a given animation (generally the parent).\n * @param el - An element to check for a target\n * @returns\n */\nfunction getTarget(el) {\n  if (TGT in el) return el[TGT];\n  return undefined;\n}\n/**\n * Checks if animations are enabled or disabled for a given element.\n * @param el - Any element\n * @returns\n */\nfunction isEnabled(el) {\n  const target = getTarget(el);\n  return target ? enabled.has(target) : false;\n}\n/**\n * Iterate over the children of a given parent.\n * @param parent - A parent element\n * @param callback - A callback\n */\nfunction forEach(parent) {\n  for (var _len = arguments.length, callbacks = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    callbacks[_key - 1] = arguments[_key];\n  }\n  callbacks.forEach(callback => callback(parent, options.has(parent)));\n  for (let i = 0; i < parent.children.length; i++) {\n    const child = parent.children.item(i);\n    if (child) {\n      callbacks.forEach(callback => callback(child, options.has(child)));\n    }\n  }\n}\n/**\n * The element in question is remaining in the DOM.\n * @param el - Element to flip\n * @returns\n */\nfunction remain(el) {\n  const oldCoords = coords.get(el);\n  const newCoords = getCoords(el);\n  if (!isEnabled(el)) return coords.set(el, newCoords);\n  let animation;\n  if (!oldCoords) return;\n  const pluginOrOptions = getOptions(el);\n  if (typeof pluginOrOptions !== \"function\") {\n    const deltaX = oldCoords.left - newCoords.left;\n    const deltaY = oldCoords.top - newCoords.top;\n    const [widthFrom, widthTo, heightFrom, heightTo] = getTransitionSizes(el, oldCoords, newCoords);\n    const start = {\n      transform: `translate(${deltaX}px, ${deltaY}px)`\n    };\n    const end = {\n      transform: `translate(0, 0)`\n    };\n    if (widthFrom !== widthTo) {\n      start.width = `${widthFrom}px`;\n      end.width = `${widthTo}px`;\n    }\n    if (heightFrom !== heightTo) {\n      start.height = `${heightFrom}px`;\n      end.height = `${heightTo}px`;\n    }\n    animation = el.animate([start, end], {\n      duration: pluginOrOptions.duration,\n      easing: pluginOrOptions.easing\n    });\n  } else {\n    animation = new Animation(pluginOrOptions(el, \"remain\", oldCoords, newCoords));\n    animation.play();\n  }\n  animations.set(el, animation);\n  coords.set(el, newCoords);\n  animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Adds the element with a transition.\n * @param el - Animates the element being added.\n */\nfunction add(el) {\n  const newCoords = getCoords(el);\n  coords.set(el, newCoords);\n  const pluginOrOptions = getOptions(el);\n  if (!isEnabled(el)) return;\n  let animation;\n  if (typeof pluginOrOptions !== \"function\") {\n    animation = el.animate([{\n      transform: \"scale(.98)\",\n      opacity: 0\n    }, {\n      transform: \"scale(0.98)\",\n      opacity: 0,\n      offset: 0.5\n    }, {\n      transform: \"scale(1)\",\n      opacity: 1\n    }], {\n      duration: pluginOrOptions.duration * 1.5,\n      easing: \"ease-in\"\n    });\n  } else {\n    animation = new Animation(pluginOrOptions(el, \"add\", newCoords));\n    animation.play();\n  }\n  animations.set(el, animation);\n  animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Animates the removal of an element.\n * @param el - Element to remove\n */\nfunction remove(el) {\n  var _a;\n  if (!siblings.has(el) || !coords.has(el)) return;\n  const [prev, next] = siblings.get(el);\n  Object.defineProperty(el, DEL, {\n    value: true\n  });\n  if (next && next.parentNode && next.parentNode instanceof Element) {\n    next.parentNode.insertBefore(el, next);\n  } else if (prev && prev.parentNode) {\n    prev.parentNode.appendChild(el);\n  } else {\n    (_a = getTarget(el)) === null || _a === void 0 ? void 0 : _a.appendChild(el);\n  }\n  function cleanUp() {\n    var _a;\n    el.remove();\n    coords.delete(el);\n    siblings.delete(el);\n    animations.delete(el);\n    (_a = intersections.get(el)) === null || _a === void 0 ? void 0 : _a.disconnect();\n  }\n  if (!isEnabled(el)) return cleanUp();\n  const [top, left, width, height] = deletePosition(el);\n  const optionsOrPlugin = getOptions(el);\n  const oldCoords = coords.get(el);\n  let animation;\n  Object.assign(el.style, {\n    position: \"absolute\",\n    top: `${top}px`,\n    left: `${left}px`,\n    width: `${width}px`,\n    height: `${height}px`,\n    margin: 0,\n    pointerEvents: \"none\",\n    transformOrigin: \"center\",\n    zIndex: 100\n  });\n  if (typeof optionsOrPlugin !== \"function\") {\n    animation = el.animate([{\n      transform: \"scale(1)\",\n      opacity: 1\n    }, {\n      transform: \"scale(.98)\",\n      opacity: 0\n    }], {\n      duration: optionsOrPlugin.duration,\n      easing: \"ease-out\"\n    });\n  } else {\n    animation = new Animation(optionsOrPlugin(el, \"remove\", oldCoords));\n    animation.play();\n  }\n  animations.set(el, animation);\n  animation.addEventListener(\"finish\", cleanUp);\n}\nfunction deletePosition(el) {\n  const oldCoords = coords.get(el);\n  const [width,, height] = getTransitionSizes(el, oldCoords, getCoords(el));\n  let offsetParent = el.parentElement;\n  while (offsetParent && (getComputedStyle(offsetParent).position === \"static\" || offsetParent instanceof HTMLBodyElement)) {\n    offsetParent = offsetParent.parentElement;\n  }\n  if (!offsetParent) offsetParent = document.body;\n  const parentStyles = getComputedStyle(offsetParent);\n  const parentCoords = coords.get(offsetParent) || getCoords(offsetParent);\n  const top = Math.round(oldCoords.top - parentCoords.top) - raw(parentStyles.borderTopWidth);\n  const left = Math.round(oldCoords.left - parentCoords.left) - raw(parentStyles.borderLeftWidth);\n  return [top, left, width, height];\n}\n/**\n * A function that automatically adds animation effects to itself and its\n * immediate children. Specifically it adds effects for adding, moving, and\n * removing DOM elements.\n * @param el - A parent element to add animations to.\n * @param options - An optional object of options.\n */\nfunction autoAnimate(el) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (mutations && resize) {\n    const mediaQuery = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n    const isDisabledDueToReduceMotion = mediaQuery.matches && typeof config !== \"function\" && !config.disrespectUserMotionPreference;\n    if (!isDisabledDueToReduceMotion) {\n      enabled.add(el);\n      if (getComputedStyle(el).position === \"static\") {\n        Object.assign(el.style, {\n          position: \"relative\"\n        });\n      }\n      forEach(el, updatePos, poll, element => resize === null || resize === void 0 ? void 0 : resize.observe(element));\n      if (typeof config === \"function\") {\n        options.set(el, config);\n      } else {\n        options.set(el, {\n          duration: 250,\n          easing: \"ease-in-out\",\n          ...config\n        });\n      }\n      mutations.observe(el, {\n        childList: true\n      });\n      parents.add(el);\n    }\n  }\n  return Object.freeze({\n    parent: el,\n    enable: () => {\n      enabled.add(el);\n    },\n    disable: () => {\n      enabled.delete(el);\n    },\n    isEnabled: () => enabled.has(el)\n  });\n}\n/**\n * The vue directive.\n */\nconst vAutoAnimate = {\n  mounted: (el, binding) => {\n    autoAnimate(el, binding.value || {});\n  }\n};\nexport { autoAnimate as default, getTransitionSizes, vAutoAnimate };","map":{"version":3,"names":["parents","Set","coords","WeakMap","siblings","animations","intersections","intervals","options","debounces","enabled","WeakSet","root","TGT","DEL","handleMutations","mutations","elements","getElements","forEach","el","animate","handleResizes","entries","entry","target","updateAllPos","has","updatePos","observePosition","oldObserver","get","disconnect","rect","invocations","buffer","getCoords","set","offsetWidth","offsetHeight","rootMargins","top","left","width","height","rootMargin","map","px","Math","floor","join","observer","IntersectionObserver","threshold","observe","clearTimeout","optionsOrPlugin","getOptions","delay","duration","setTimeout","currentAnimation","finished","parent","lowPriority","poll","setInterval","bind","round","random","callback","requestIdleCallback","requestAnimationFrame","resize","window","document","documentElement","MutationObserver","ResizeObserver","observedNodes","reduce","nodes","mutation","Array","from","addedNodes","removedNodes","onlyCommentNodesObserved","every","node","nodeName","Element","add","i","children","length","child","item","previousSibling","nextSibling","Object","defineProperty","value","_a","isMounted","contains","preExisting","delete","cancel","remain","remove","raw","str","Number","replace","getBoundingClientRect","scrollY","scrollX","getTransitionSizes","oldCoords","newCoords","widthFrom","heightFrom","widthTo","heightTo","styles","getComputedStyle","sizing","getPropertyValue","paddingY","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","paddingX","paddingLeft","paddingRight","borderRightWidth","borderLeftWidth","easing","getTarget","undefined","isEnabled","callbacks","animation","pluginOrOptions","deltaX","deltaY","start","transform","end","Animation","play","addEventListener","opacity","offset","prev","next","parentNode","insertBefore","appendChild","cleanUp","deletePosition","assign","style","position","margin","pointerEvents","transformOrigin","zIndex","offsetParent","parentElement","HTMLBodyElement","body","parentStyles","parentCoords","autoAnimate","config","mediaQuery","matchMedia","isDisabledDueToReduceMotion","matches","disrespectUserMotionPreference","element","childList","freeze","enable","disable","vAutoAnimate","mounted","binding","default"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/todolist/node_modules/@formkit/auto-animate/index.mjs"],"sourcesContent":["/**\n * A set of all the parents currently being observe. This is the only non weak\n * registry.\n */\nconst parents = new Set();\n/**\n * Element coordinates that is constantly kept up to date.\n */\nconst coords = new WeakMap();\n/**\n * Siblings of elements that have been removed from the dom.\n */\nconst siblings = new WeakMap();\n/**\n * Animations that are currently running.\n */\nconst animations = new WeakMap();\n/**\n * A map of existing intersection observers used to track element movements.\n */\nconst intersections = new WeakMap();\n/**\n * Intervals for automatically checking the position of elements occasionally.\n */\nconst intervals = new WeakMap();\n/**\n * The configuration options for each group of elements.\n */\nconst options = new WeakMap();\n/**\n * Debounce counters by id, used to debounce calls to update positions.\n */\nconst debounces = new WeakMap();\n/**\n * All parents that are currently enabled are tracked here.\n */\nconst enabled = new WeakSet();\n/**\n * The document used to calculate transitions.\n */\nlet root;\n/**\n * Used to sign an element as the target.\n */\nconst TGT = \"__aa_tgt\";\n/**\n * Used to sign an element as being part of a removal.\n */\nconst DEL = \"__aa_del\";\n/**\n * Callback for handling all mutations.\n * @param mutations - A mutation list\n */\nconst handleMutations = (mutations) => {\n    const elements = getElements(mutations);\n    // If elements is \"false\" that means this mutation that should be ignored.\n    if (elements) {\n        elements.forEach((el) => animate(el));\n    }\n};\n/**\n *\n * @param entries - Elements that have been resized.\n */\nconst handleResizes = (entries) => {\n    entries.forEach((entry) => {\n        if (entry.target === root)\n            updateAllPos();\n        if (coords.has(entry.target))\n            updatePos(entry.target);\n    });\n};\n/**\n * Observe this elements position.\n * @param el - The element to observe the position of.\n */\nfunction observePosition(el) {\n    const oldObserver = intersections.get(el);\n    oldObserver === null || oldObserver === void 0 ? void 0 : oldObserver.disconnect();\n    let rect = coords.get(el);\n    let invocations = 0;\n    const buffer = 5;\n    if (!rect) {\n        rect = getCoords(el);\n        coords.set(el, rect);\n    }\n    const { offsetWidth, offsetHeight } = root;\n    const rootMargins = [\n        rect.top - buffer,\n        offsetWidth - (rect.left + buffer + rect.width),\n        offsetHeight - (rect.top + buffer + rect.height),\n        rect.left - buffer,\n    ];\n    const rootMargin = rootMargins\n        .map((px) => `${-1 * Math.floor(px)}px`)\n        .join(\" \");\n    const observer = new IntersectionObserver(() => {\n        ++invocations > 1 && updatePos(el);\n    }, {\n        root,\n        threshold: 1,\n        rootMargin,\n    });\n    observer.observe(el);\n    intersections.set(el, observer);\n}\n/**\n * Update the exact position of a given element.\n * @param el - An element to update the position of.\n */\nfunction updatePos(el) {\n    clearTimeout(debounces.get(el));\n    const optionsOrPlugin = getOptions(el);\n    const delay = typeof optionsOrPlugin === \"function\" ? 500 : optionsOrPlugin.duration;\n    debounces.set(el, setTimeout(async () => {\n        const currentAnimation = animations.get(el);\n        if (!currentAnimation || (await currentAnimation.finished)) {\n            coords.set(el, getCoords(el));\n            observePosition(el);\n        }\n    }, delay));\n}\n/**\n * Updates all positions that are currently being tracked.\n */\nfunction updateAllPos() {\n    clearTimeout(debounces.get(root));\n    debounces.set(root, setTimeout(() => {\n        parents.forEach((parent) => forEach(parent, (el) => lowPriority(() => updatePos(el))));\n    }, 100));\n}\n/**\n * Its possible for a quick scroll or other fast events to get past the\n * intersection observer, so occasionally we need want \"cold-poll\" for the\n * latests and greatest position. We try to do this in the most non-disruptive\n * fashion possible. First we only do this ever couple seconds, staggard by a\n * random offset.\n * @param el - Element\n */\nfunction poll(el) {\n    setTimeout(() => {\n        intervals.set(el, setInterval(() => lowPriority(updatePos.bind(null, el)), 2000));\n    }, Math.round(2000 * Math.random()));\n}\n/**\n * Perform some operation that is non critical at some point.\n * @param callback\n */\nfunction lowPriority(callback) {\n    if (typeof requestIdleCallback === \"function\") {\n        requestIdleCallback(() => callback());\n    }\n    else {\n        requestAnimationFrame(() => callback());\n    }\n}\n/**\n * The mutation observer responsible for watching each root element.\n */\nlet mutations;\n/**\n * A resize observer, responsible for recalculating elements on resize.\n */\nlet resize;\n/**\n * If this is in a browser, initialize our Web APIs\n */\nif (typeof window !== \"undefined\") {\n    root = document.documentElement;\n    mutations = new MutationObserver(handleMutations);\n    resize = new ResizeObserver(handleResizes);\n    resize.observe(root);\n}\n/**\n * Retrieves all the elements that may have been affected by the last mutation\n * including ones that have been removed and are no longer in the DOM.\n * @param mutations - A mutation list.\n * @returns\n */\nfunction getElements(mutations) {\n    const observedNodes = mutations.reduce((nodes, mutation) => {\n        return [\n            ...nodes,\n            ...Array.from(mutation.addedNodes),\n            ...Array.from(mutation.removedNodes),\n        ];\n    }, []);\n    // Short circuit if _only_ comment nodes are observed\n    const onlyCommentNodesObserved = observedNodes.every((node) => node.nodeName === \"#comment\");\n    if (onlyCommentNodesObserved)\n        return false;\n    return mutations.reduce((elements, mutation) => {\n        // Short circuit if we find a purposefully deleted node.\n        if (elements === false)\n            return false;\n        if (mutation.target instanceof Element) {\n            target(mutation.target);\n            if (!elements.has(mutation.target)) {\n                elements.add(mutation.target);\n                for (let i = 0; i < mutation.target.children.length; i++) {\n                    const child = mutation.target.children.item(i);\n                    if (!child)\n                        continue;\n                    if (DEL in child)\n                        return false;\n                    target(mutation.target, child);\n                    elements.add(child);\n                }\n            }\n            if (mutation.removedNodes.length) {\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const child = mutation.removedNodes[i];\n                    if (DEL in child)\n                        return false;\n                    if (child instanceof Element) {\n                        elements.add(child);\n                        target(mutation.target, child);\n                        siblings.set(child, [\n                            mutation.previousSibling,\n                            mutation.nextSibling,\n                        ]);\n                    }\n                }\n            }\n        }\n        return elements;\n    }, new Set());\n}\n/**\n * Assign the target to an element.\n * @param el - The root element\n * @param child\n */\nfunction target(el, child) {\n    if (!child && !(TGT in el))\n        Object.defineProperty(el, TGT, { value: el });\n    else if (child && !(TGT in child))\n        Object.defineProperty(child, TGT, { value: el });\n}\n/**\n * Determines what kind of change took place on the given element and then\n * performs the proper animation based on that.\n * @param el - The specific element to animate.\n */\nfunction animate(el) {\n    var _a;\n    const isMounted = root.contains(el);\n    const preExisting = coords.has(el);\n    if (isMounted && siblings.has(el))\n        siblings.delete(el);\n    if (animations.has(el)) {\n        (_a = animations.get(el)) === null || _a === void 0 ? void 0 : _a.cancel();\n    }\n    if (preExisting && isMounted) {\n        remain(el);\n    }\n    else if (preExisting && !isMounted) {\n        remove(el);\n    }\n    else {\n        add(el);\n    }\n}\n/**\n * Removes all non-digits from a string and casts to a number.\n * @param str - A string containing a pixel value.\n * @returns\n */\nfunction raw(str) {\n    return Number(str.replace(/[^0-9.\\-]/g, \"\"));\n}\n/**\n * Get the coordinates of elements adjusted for scroll position.\n * @param el - Element\n * @returns\n */\nfunction getCoords(el) {\n    const rect = el.getBoundingClientRect();\n    return {\n        top: rect.top + window.scrollY,\n        left: rect.left + window.scrollX,\n        width: rect.width,\n        height: rect.height,\n    };\n}\n/**\n * Returns the width/height that the element should be transitioned between.\n * This takes into account box-sizing.\n * @param el - Element being animated\n * @param oldCoords - Old set of Coordinates coordinates\n * @param newCoords - New set of Coordinates coordinates\n * @returns\n */\nfunction getTransitionSizes(el, oldCoords, newCoords) {\n    let widthFrom = oldCoords.width;\n    let heightFrom = oldCoords.height;\n    let widthTo = newCoords.width;\n    let heightTo = newCoords.height;\n    const styles = getComputedStyle(el);\n    const sizing = styles.getPropertyValue(\"box-sizing\");\n    if (sizing === \"content-box\") {\n        const paddingY = raw(styles.paddingTop) +\n            raw(styles.paddingBottom) +\n            raw(styles.borderTopWidth) +\n            raw(styles.borderBottomWidth);\n        const paddingX = raw(styles.paddingLeft) +\n            raw(styles.paddingRight) +\n            raw(styles.borderRightWidth) +\n            raw(styles.borderLeftWidth);\n        widthFrom -= paddingX;\n        widthTo -= paddingX;\n        heightFrom -= paddingY;\n        heightTo -= paddingY;\n    }\n    return [widthFrom, widthTo, heightFrom, heightTo].map(Math.round);\n}\n/**\n * Retrieves animation options for the current element.\n * @param el - Element to retrieve options for.\n * @returns\n */\nfunction getOptions(el) {\n    return TGT in el && options.has(el[TGT])\n        ? options.get(el[TGT])\n        : { duration: 250, easing: \"ease-in-out\" };\n}\n/**\n * Returns the target of a given animation (generally the parent).\n * @param el - An element to check for a target\n * @returns\n */\nfunction getTarget(el) {\n    if (TGT in el)\n        return el[TGT];\n    return undefined;\n}\n/**\n * Checks if animations are enabled or disabled for a given element.\n * @param el - Any element\n * @returns\n */\nfunction isEnabled(el) {\n    const target = getTarget(el);\n    return target ? enabled.has(target) : false;\n}\n/**\n * Iterate over the children of a given parent.\n * @param parent - A parent element\n * @param callback - A callback\n */\nfunction forEach(parent, ...callbacks) {\n    callbacks.forEach((callback) => callback(parent, options.has(parent)));\n    for (let i = 0; i < parent.children.length; i++) {\n        const child = parent.children.item(i);\n        if (child) {\n            callbacks.forEach((callback) => callback(child, options.has(child)));\n        }\n    }\n}\n/**\n * The element in question is remaining in the DOM.\n * @param el - Element to flip\n * @returns\n */\nfunction remain(el) {\n    const oldCoords = coords.get(el);\n    const newCoords = getCoords(el);\n    if (!isEnabled(el))\n        return coords.set(el, newCoords);\n    let animation;\n    if (!oldCoords)\n        return;\n    const pluginOrOptions = getOptions(el);\n    if (typeof pluginOrOptions !== \"function\") {\n        const deltaX = oldCoords.left - newCoords.left;\n        const deltaY = oldCoords.top - newCoords.top;\n        const [widthFrom, widthTo, heightFrom, heightTo] = getTransitionSizes(el, oldCoords, newCoords);\n        const start = {\n            transform: `translate(${deltaX}px, ${deltaY}px)`,\n        };\n        const end = {\n            transform: `translate(0, 0)`,\n        };\n        if (widthFrom !== widthTo) {\n            start.width = `${widthFrom}px`;\n            end.width = `${widthTo}px`;\n        }\n        if (heightFrom !== heightTo) {\n            start.height = `${heightFrom}px`;\n            end.height = `${heightTo}px`;\n        }\n        animation = el.animate([start, end], {\n            duration: pluginOrOptions.duration,\n            easing: pluginOrOptions.easing,\n        });\n    }\n    else {\n        animation = new Animation(pluginOrOptions(el, \"remain\", oldCoords, newCoords));\n        animation.play();\n    }\n    animations.set(el, animation);\n    coords.set(el, newCoords);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Adds the element with a transition.\n * @param el - Animates the element being added.\n */\nfunction add(el) {\n    const newCoords = getCoords(el);\n    coords.set(el, newCoords);\n    const pluginOrOptions = getOptions(el);\n    if (!isEnabled(el))\n        return;\n    let animation;\n    if (typeof pluginOrOptions !== \"function\") {\n        animation = el.animate([\n            { transform: \"scale(.98)\", opacity: 0 },\n            { transform: \"scale(0.98)\", opacity: 0, offset: 0.5 },\n            { transform: \"scale(1)\", opacity: 1 },\n        ], {\n            duration: pluginOrOptions.duration * 1.5,\n            easing: \"ease-in\",\n        });\n    }\n    else {\n        animation = new Animation(pluginOrOptions(el, \"add\", newCoords));\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Animates the removal of an element.\n * @param el - Element to remove\n */\nfunction remove(el) {\n    var _a;\n    if (!siblings.has(el) || !coords.has(el))\n        return;\n    const [prev, next] = siblings.get(el);\n    Object.defineProperty(el, DEL, { value: true });\n    if (next && next.parentNode && next.parentNode instanceof Element) {\n        next.parentNode.insertBefore(el, next);\n    }\n    else if (prev && prev.parentNode) {\n        prev.parentNode.appendChild(el);\n    }\n    else {\n        (_a = getTarget(el)) === null || _a === void 0 ? void 0 : _a.appendChild(el);\n    }\n    function cleanUp() {\n        var _a;\n        el.remove();\n        coords.delete(el);\n        siblings.delete(el);\n        animations.delete(el);\n        (_a = intersections.get(el)) === null || _a === void 0 ? void 0 : _a.disconnect();\n    }\n    if (!isEnabled(el))\n        return cleanUp();\n    const [top, left, width, height] = deletePosition(el);\n    const optionsOrPlugin = getOptions(el);\n    const oldCoords = coords.get(el);\n    let animation;\n    Object.assign(el.style, {\n        position: \"absolute\",\n        top: `${top}px`,\n        left: `${left}px`,\n        width: `${width}px`,\n        height: `${height}px`,\n        margin: 0,\n        pointerEvents: \"none\",\n        transformOrigin: \"center\",\n        zIndex: 100,\n    });\n    if (typeof optionsOrPlugin !== \"function\") {\n        animation = el.animate([\n            {\n                transform: \"scale(1)\",\n                opacity: 1,\n            },\n            {\n                transform: \"scale(.98)\",\n                opacity: 0,\n            },\n        ], { duration: optionsOrPlugin.duration, easing: \"ease-out\" });\n    }\n    else {\n        animation = new Animation(optionsOrPlugin(el, \"remove\", oldCoords));\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", cleanUp);\n}\nfunction deletePosition(el) {\n    const oldCoords = coords.get(el);\n    const [width, , height] = getTransitionSizes(el, oldCoords, getCoords(el));\n    let offsetParent = el.parentElement;\n    while (offsetParent &&\n        (getComputedStyle(offsetParent).position === \"static\" ||\n            offsetParent instanceof HTMLBodyElement)) {\n        offsetParent = offsetParent.parentElement;\n    }\n    if (!offsetParent)\n        offsetParent = document.body;\n    const parentStyles = getComputedStyle(offsetParent);\n    const parentCoords = coords.get(offsetParent) || getCoords(offsetParent);\n    const top = Math.round(oldCoords.top - parentCoords.top) -\n        raw(parentStyles.borderTopWidth);\n    const left = Math.round(oldCoords.left - parentCoords.left) -\n        raw(parentStyles.borderLeftWidth);\n    return [top, left, width, height];\n}\n/**\n * A function that automatically adds animation effects to itself and its\n * immediate children. Specifically it adds effects for adding, moving, and\n * removing DOM elements.\n * @param el - A parent element to add animations to.\n * @param options - An optional object of options.\n */\nfunction autoAnimate(el, config = {}) {\n    if (mutations && resize) {\n        const mediaQuery = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n        const isDisabledDueToReduceMotion = mediaQuery.matches &&\n            typeof config !== \"function\" &&\n            !config.disrespectUserMotionPreference;\n        if (!isDisabledDueToReduceMotion) {\n            enabled.add(el);\n            if (getComputedStyle(el).position === \"static\") {\n                Object.assign(el.style, { position: \"relative\" });\n            }\n            forEach(el, updatePos, poll, (element) => resize === null || resize === void 0 ? void 0 : resize.observe(element));\n            if (typeof config === \"function\") {\n                options.set(el, config);\n            }\n            else {\n                options.set(el, { duration: 250, easing: \"ease-in-out\", ...config });\n            }\n            mutations.observe(el, { childList: true });\n            parents.add(el);\n        }\n    }\n    return Object.freeze({\n        parent: el,\n        enable: () => {\n            enabled.add(el);\n        },\n        disable: () => {\n            enabled.delete(el);\n        },\n        isEnabled: () => enabled.has(el),\n    });\n}\n/**\n * The vue directive.\n */\nconst vAutoAnimate = {\n    mounted: (el, binding) => {\n        autoAnimate(el, binding.value || {});\n    },\n};\n\nexport { autoAnimate as default, getTransitionSizes, vAutoAnimate };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}