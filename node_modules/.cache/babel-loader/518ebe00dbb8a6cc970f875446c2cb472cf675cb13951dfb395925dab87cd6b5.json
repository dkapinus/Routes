{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { v1 } from 'uuid';\nimport { Todolist } from \"./Todolist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  const removeTask = id => {\n    let newTask = tasks.filter(el => el.id != id);\n    setTasks(newTask);\n  };\n  let [nameButton, setNameButton] = useState('All');\n  const ChangeFilter = nameButton => {\n    setNameButton(nameButton);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      task: tasks,\n      name: 'What to learn',\n      removeTask: removeTask,\n      ChangeFilter: ChangeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gPRo4qbp6f9c8CT8l2n2/z+4WjM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","v1","Todolist","App","tasks","setTasks","id","title","isDone","removeTask","newTask","filter","el","nameButton","setNameButton","ChangeFilter"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/App.tsx"],"sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\nimport {v1} from 'uuid'\nimport {Todolist} from \"./Todolist\";\n\n\nexport type ButtonType ='All'|'Active'|'Completed'\n\nfunction App() {\n  let [tasks, setTasks] = useState([\n    {id: v1(), title: \"HTML&CSS\", isDone: true},\n    {id: v1(), title: \"JS\", isDone: true},\n    {id: v1(), title: \"ReactJS\", isDone: false},\n    {id: v1(), title: \"Rest API\", isDone: false},\n    {id: v1(), title: \"GraphQL\", isDone: false},\n  ]);\n\n\n\nconst removeTask = (id:string)=> {\nlet newTask=tasks.filter((el)=>el.id!=id)\n  setTasks(newTask)\n}\n\nlet [nameButton,setNameButton]=useState('All')\n\nconst ChangeFilter = (nameButton:string)=> {\nsetNameButton(nameButton)\n}\n\n  return (\n    <div className=\"App\">\n   <Todolist task={tasks} name={'What to learn'} removeTask={removeTask}\n             ChangeFilter={ChangeFilter}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,WAAW;AAClB,SAAQC,EAAE,QAAO,MAAM;AACvB,SAAQC,QAAQ,QAAO,YAAY;AAAC;AAKpC,SAASC,GAAG,GAAG;EAAA;EACb,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAC/B;IAACM,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAI,CAAC,EAC3C;IAACF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAI,CAAC,EACrC;IAACF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC,EAC3C;IAACF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAK,CAAC,EAC5C;IAACF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC,CAC5C,CAAC;EAIJ,MAAMC,UAAU,GAAIH,EAAS,IAAI;IACjC,IAAII,OAAO,GAACN,KAAK,CAACO,MAAM,CAAEC,EAAE,IAAGA,EAAE,CAACN,EAAE,IAAEA,EAAE,CAAC;IACvCD,QAAQ,CAACK,OAAO,CAAC;EACnB,CAAC;EAED,IAAI,CAACG,UAAU,EAACC,aAAa,CAAC,GAACd,QAAQ,CAAC,KAAK,CAAC;EAE9C,MAAMe,YAAY,GAAIF,UAAiB,IAAI;IAC3CC,aAAa,CAACD,UAAU,CAAC;EACzB,CAAC;EAEC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBACrB,QAAC,QAAQ;MAAC,IAAI,EAAET,KAAM;MAAC,IAAI,EAAE,eAAgB;MAAC,UAAU,EAAEK,UAAW;MAC3D,YAAY,EAAEM;IAAa;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QAChC;AAEV;AAAC,GA5BQZ,GAAG;AAAA,KAAHA,GAAG;AA8BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}