{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let todoListsID1 = v1();\n  let todoListsID2 = v1();\n  let [todoLists, SetTodoLists] = useState([{\n    id: todoListsID1,\n    title: \"Whats to learn\",\n    filter: \"All\"\n  }, {\n    id: todoListsID2,\n    title: \"Whats to buy\",\n    filter: \"All\"\n  }]);\n  let [tasks, setTasks] = useState({\n    [todoListsID1]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }]\n  });\n  const removeTask = taskId => {\n    setTasks(tasks.filter(el => el.id !== taskId));\n  };\n  const [filter, setFilter] = useState('all');\n  const AddNameButton = nameButton => {\n    setFilter(nameButton);\n  };\n  const Filtered = () => {\n    let newTask = tasks;\n    if (filter === 'active') {\n      newTask = tasks.filter(el => el.isDone === false);\n    }\n    if (filter === 'completed') {\n      newTask = tasks.filter(el => el.isDone === true);\n    }\n    return newTask;\n  };\n  const AddMessage = valueInput => {\n    let newTask = {\n      id: v1(),\n      title: valueInput,\n      isDone: true\n    };\n    setTasks([newTask, ...tasks]);\n  };\n  const ChangeStatus = (id, e) => {\n    setTasks(tasks.map(el => el.id === id ? {\n      ...el,\n      isDone: e\n    } : el));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      Filter: filter,\n      title: 'What to learn',\n      tasks: Filtered(),\n      AddNameButton: AddNameButton,\n      removeTask: removeTask,\n      AddMessage: AddMessage,\n      ChangeStatus: ChangeStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"9K+dlKZeczNUv/1VOcXwjUSqIRQ=\");\n_c = App;\nexport default App;\n\n//-------------------------------------------------------------------------------------------------------\n//\n// export type FilterValuesType = \"all\" | \"active\" | \"completed\";\n//\n// function App() {\n//\n//     let [tasks, setTasks] = useState([\n//         {id: v1(), title: \"HTML&CSS\", isDone: true},\n//         {id: v1(), title: \"JS\", isDone: true},\n//         {id: v1(), title: \"ReactJS\", isDone: false},\n//         {id: v1(), title: \"Rest API\", isDone: false},\n//         {id: v1(), title: \"GraphQL\", isDone: false},\n//     ]);\n//\n//     function removeTask(id: string) {\n//         let filteredTasks = tasks.filter(t => t.id != id);\n//         setTasks(filteredTasks);\n//     }\n//\n//     function addTask(title: string) {\n//         let task = {id: v1(), title: title, isDone: false};\n//         let newTasks = [task, ...tasks];\n//         setTasks(newTasks);\n//     }\n//\n//     let [filter, setFilter] = useState<FilterValuesType>(\"all\");\n//\n//     let tasksForTodolist = tasks;\n//\n//     if (filter === \"active\") {\n//         tasksForTodolist = tasks.filter(t => t.isDone === false);\n//     }\n//     if (filter === \"completed\") {\n//         tasksForTodolist = tasks.filter(t => t.isDone === true);\n//     }\n//\n//     function changeFilter(value: FilterValuesType) {\n//         setFilter(value);\n//     }\n//\n//\n//     return (\n//         <div className=\"App\">\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}>\n//                 <div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                 </div>\n//             </Todolist>\n//\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}>\n//                 <div>\n//                     <div>A lot of boring information</div>\n//                     <div>A lot of boring information</div>\n//                     <div>A lot of boring information</div>\n//                     <input placeholder={'A lot of boring information'}/>\n//                     <div>\n//                         <button>Boring Button 1</button>\n//                         <button>Boring Button 2</button>\n//                         <button>Boring Button 3</button>\n//                     </div>\n//                 </div>\n//             </Todolist>\n//\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}/>\n//         </div>\n//     );\n// }\n//\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","App","todoListsID1","todoListsID2","todoLists","SetTodoLists","id","title","filter","tasks","setTasks","isDone","removeTask","taskId","el","setFilter","AddNameButton","nameButton","Filtered","newTask","AddMessage","valueInput","ChangeStatus","e","map"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport { v1 } from 'uuid';\r\n\r\n\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\nfunction App() {\r\n\r\n    let todoListsID1=v1()\r\n    let todoListsID2=v1()\r\n\r\n    let [todoLists, SetTodoLists] = useState<TodoListsType[]>([\r\n        {id: todoListsID1, title: \"Whats to learn\", filter: \"All\"},\r\n        {id: todoListsID2, title: \"Whats to buy\", filter: \"All\"},\r\n\r\n    ])\r\n\r\n\r\n    let [tasks, setTasks] = useState({\r\n        [todoListsID1]:[\r\n        { id: v1(), title: \"HTML&CSS\", isDone: true },\r\n        { id: v1(), title: \"JS\", isDone: true },\r\n        { id: v1(), title: \"ReactJS\", isDone: false },\r\n        { id: v1(), title: \"Rest API\", isDone: false },\r\n        { id: v1(), title: \"GraphQL\", isDone: false },\r\n    ]});\r\n\r\n\r\n\r\n    const removeTask = (taskId:string)=> {\r\n\r\n        setTasks(tasks.filter((el)=>el.id!==taskId))\r\n    }\r\n    const[filter,setFilter]=useState<FilterValuesType>('all')\r\n\r\n       const AddNameButton = (nameButton:FilterValuesType)=> {\r\n    setFilter(nameButton)\r\n       }\r\n\r\n       const Filtered = ()=> {\r\n        let newTask=tasks\r\n        if(filter==='active'){newTask=tasks.filter((el)=>el.isDone===false)}\r\n        if(filter==='completed'){newTask=tasks.filter((el)=>el.isDone===true)}\r\n\r\n        return newTask\r\n       }\r\n\r\n       const AddMessage = (valueInput:string)=> {\r\n        let newTask={ id: v1(), title: valueInput, isDone: true }\r\n        setTasks([newTask,...tasks])\r\n       }\r\n\r\n       const ChangeStatus=(id:string,e:boolean)=> {\r\n          setTasks(tasks.map((el)=>el.id===id ?{...el,isDone:e} : el))\r\n       }\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist\r\n                Filter={filter}\r\n                title={'What to learn'}\r\n                tasks={Filtered()}\r\n                AddNameButton={AddNameButton}\r\n                removeTask={removeTask}\r\n                AddMessage={AddMessage}\r\n                ChangeStatus={ChangeStatus}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//-------------------------------------------------------------------------------------------------------\r\n//\r\n// export type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n//\r\n// function App() {\r\n//\r\n//     let [tasks, setTasks] = useState([\r\n//         {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n//         {id: v1(), title: \"JS\", isDone: true},\r\n//         {id: v1(), title: \"ReactJS\", isDone: false},\r\n//         {id: v1(), title: \"Rest API\", isDone: false},\r\n//         {id: v1(), title: \"GraphQL\", isDone: false},\r\n//     ]);\r\n//\r\n//     function removeTask(id: string) {\r\n//         let filteredTasks = tasks.filter(t => t.id != id);\r\n//         setTasks(filteredTasks);\r\n//     }\r\n//\r\n//     function addTask(title: string) {\r\n//         let task = {id: v1(), title: title, isDone: false};\r\n//         let newTasks = [task, ...tasks];\r\n//         setTasks(newTasks);\r\n//     }\r\n//\r\n//     let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n//\r\n//     let tasksForTodolist = tasks;\r\n//\r\n//     if (filter === \"active\") {\r\n//         tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n//     }\r\n//     if (filter === \"completed\") {\r\n//         tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n//     }\r\n//\r\n//     function changeFilter(value: FilterValuesType) {\r\n//         setFilter(value);\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <div className=\"App\">\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}>\r\n//                 <div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                 </div>\r\n//             </Todolist>\r\n//\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}>\r\n//                 <div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <input placeholder={'A lot of boring information'}/>\r\n//                     <div>\r\n//                         <button>Boring Button 1</button>\r\n//                         <button>Boring Button 2</button>\r\n//                         <button>Boring Button 3</button>\r\n//                     </div>\r\n//                 </div>\r\n//             </Todolist>\r\n//\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}/>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}