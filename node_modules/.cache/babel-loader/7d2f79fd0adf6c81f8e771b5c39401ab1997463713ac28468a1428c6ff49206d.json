{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/ToDolist.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = props => {\n  const onClickFilteredButton = nameButton => {\n    props.FilteredButton(nameButton);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.task.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [el.title, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: el.isDone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => props.RemoveTask(el.id),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this)]\n          }, el.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 30\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFilteredButton('All'),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFilteredButton('Active'),\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFilteredButton('Completed'),\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","Todolist","props","onClickFilteredButton","nameButton","FilteredButton","task","map","el","title","isDone","RemoveTask","id"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/todolist/src/ToDolist.tsx"],"sourcesContent":["import React from 'react';\n\ntype TodolistType = {\n    task:Array<ArrayTaskType>\n    FilteredButton:(nameButton:string)=>void\n    RemoveTask:(id:string)=>void\n}\n\ntype ArrayTaskType = {\n    id:string\n    title:string;\n    isDone:boolean\n}\n\n\nexport  const Todolist = (props:TodolistType) => {\n\n\n    const onClickFilteredButton = (nameButton:string)=> {\nprops.FilteredButton(nameButton)\n    }\n\n    return (\n        <div>\n             <input/>\n            <button>Add</button>\n            <div>\n                {props.task.map((el)=>{\n                    return ( <div>\n                            <li key={el.id}>{el.title}\n                                <input type={\"checkbox\"} checked={el.isDone}/>\n                                <button onClick={()=>props.RemoveTask(el.id)}>X</button>\n                            </li>\n\n                        </div>\n                    )\n                })}\n\n            </div>\n            <button onClick={()=>onClickFilteredButton('All')}>All</button>\n            <button onClick={()=>onClickFilteredButton('Active')}>Active</button>\n            <button onClick={()=>onClickFilteredButton('Completed')}>Completed</button>\n        </div>\n    );\n};\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAe1B,OAAQ,MAAMC,QAAQ,GAAIC,KAAkB,IAAK;EAG7C,MAAMC,qBAAqB,GAAIC,UAAiB,IAAI;IACxDF,KAAK,CAACG,cAAc,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,oBACI;IAAA,wBACK;MAAA;MAAA;MAAA;IAAA,QAAQ,eACT;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACpB;MAAA,UACKF,KAAK,CAACI,IAAI,CAACC,GAAG,CAAEC,EAAE,IAAG;QAClB,oBAAS;UAAA,uBACD;YAAA,WAAiBA,EAAE,CAACC,KAAK,eACrB;cAAO,IAAI,EAAE,UAAW;cAAC,OAAO,EAAED,EAAE,CAACE;YAAO;cAAA;cAAA;cAAA;YAAA,QAAE,eAC9C;cAAQ,OAAO,EAAE,MAAIR,KAAK,CAACS,UAAU,CAACH,EAAE,CAACI,EAAE,CAAE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAW;UAAA,GAFnDJ,EAAE,CAACI,EAAE;YAAA;YAAA;YAAA;UAAA;QAGT;UAAA;UAAA;UAAA;QAAA,QAEH;MAEd,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEA,eACN;MAAQ,OAAO,EAAE,MAAIT,qBAAqB,CAAC,KAAK,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eAC/D;MAAQ,OAAO,EAAE,MAAIA,qBAAqB,CAAC,QAAQ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eACrE;MAAQ,OAAO,EAAE,MAAIA,qBAAqB,CAAC,WAAW,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAA;IAAA;IAAA;IAAA;EAAA,QACzE;AAEd,CAAC;AAAC,KA7BYF,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}